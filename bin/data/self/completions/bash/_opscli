#!/usr/bin/env bash

function _opscli::completion() {
    local cur prev opts path log_path

    log_path="${HOME_OF_OPS_CLI}/.logs/_opscli.log"
    COMPREPLY=()

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    path="${HOME_OF_OPS_CLI}/bin/scripts"
    for word in "${COMP_WORDS[@]:1:COMP_CWORD-1}"
    do
        path="${path}/${word}"
    done

    echo "path=${path};" >> "$log_path"
    if [[ -f "${path}.sh.comp" ]]; then
        opts="$(. "${path}.sh.comp")"
        echo "opts=${opts};" >> "$log_path"
    else
        if [[ -d "${path}" ]]; then
            opts=""
            for sh in $(/bin/ls ${path}/*.sh); do
                sh="$(/usr/bin/basename "$sh")"
                opts="$opts ${sh%.*}"
            done
        fi
        if [[ -f "${path}.sh.help" ]]; then
            echo "$(. "${path}.sh.help" flags)" >> "$log_path"
            # 获取 .sh.help 中 flags 中的 -h, --help 这种 flag
            # shellcheck disable=SC1090
            opts="$opts $(. "${path}.sh.help" flags | /bin/grep -oP '(?:^\s*|\,\s?)\K(-\w+|--\w+)')"
            echo "opts=$opts" >> "$log_path"
        elif [[ -f "${path}.sh.def" ]]; then
            # shellcheck disable=SC1090
            . "${path}.sh.def"
            eval "$(get_def)"
            # 获取 def 中定义的 flags 和 options
            eval "${def_map["flags"]}"
            eval "${def_map["options"]}"
            for key in "${!options[@]}"; do
                key="${key%%=*}"
                opts="$opts ${key//,/ }"
            done
            for key in "${!flags[@]}"; do
                opts="$opts ${key//,/ }"
            done
        fi
    fi
    COMPREPLY=( $(compgen -o filenames -W "$opts" -- ${cur}) )
}
# complete -F _ops_cli::completion "ops-cli"

# http://kodango.com/bash-competion-programming
# https://segmentfault.com/a/1190000002968878
